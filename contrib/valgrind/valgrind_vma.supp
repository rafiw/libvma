# false positive librdmacm.so
{
   rdmacm Cond rdma_get_devices
   Memcheck:Cond
   ...
   fun:rdma_get_devices
}
{
   rdmacm Value8 rdma_get_devices
   Memcheck:Value8
   ...
   fun:rdma_get_devices
}
{
   rdmacm Param rdma_get_devices
   Memcheck:Param
   write(buf)
   ...
   fun:rdma_get_devices
}
{
   rdmacm Cond rdma_create_id
   Memcheck:Cond
   obj:*/librdmacm.so*
   fun:rdma_create_id
}
{
   rdmacm Value8 rdma_create_id
   Memcheck:Value8
   obj:*/librdmacm.so*
   fun:rdma_create_id
}
{
   rdmacm Cond rdma_bind_addr
   Memcheck:Cond
   ...
   fun:rdma_bind_addr
}
{
   rdmacm Param rdma_bind_addr
   Memcheck:Param
   write(buf)
   ...
   fun:rdma_bind_addr
}
{
   rdmacm Cond rdma_destroy_id
   Memcheck:Cond
   ...
   fun:rdma_destroy_id
}
{
   rdmacm Value8 rdma_destroy_id
   Memcheck:Value8
   ...
   fun:rdma_destroy_id
}
{
   rdmacm Param rdma_destroy_id
   Memcheck:Param
   write(buf)
   ...
   fun:rdma_destroy_id
}
# false positive verbs
{
   libibverbs ibv_exp_cmd_create_qp
   Memcheck:Param
   write(buf)
   obj:*/libibverbs.so*
   ...
   fun:write
   fun:ibv_exp_cmd_create_qp
}
{
   libibverbs ibv_exp_cmd_create_flow
   Memcheck:Param
   write(buf)
   ...
   obj:*/libibverbs.so*
   fun:ibv_exp_cmd_create_flow
   fun:ibv_exp_create_flow
}
{
   libibverbs ibv_exp_destroy_flow
   Memcheck:Param
   write(buf)
   ...
   fun:write
   fun:ibv_exp_cmd_destroy_flow
   fun:ibv_exp_destroy_flow
}
# false positive libmlx5
{
   libibverbs ibv_cmd_destroy_qp
   Memcheck:Cond
   fun:ibv_cmd_destroy_qp
   obj:*/libmlx5-rdmav2.so*
}
{
   libmlx5 ibv_exp_cmd_create_qp
   Memcheck:Param
   write(buf)
   ...
   fun:ibv_exp_cmd_create_qp
   obj:*/libmlx5-rdmav2.so*
   ...
   fun:ibv_create_qp
}
{
   libmlx5 ibv_cmd_destroy_cq
   Memcheck:Param
   write(buf)
   ...
   fun:ibv_cmd_destroy_cq
   obj:/*libmlx5-rdmav2.so*
   fun:ibv_destroy_cq
}
{
   libmlx5 ibv_destroy_cq
   Memcheck:Cond
   fun:ibv_cmd_destroy_cq
   obj:*/libmlx5-rdmav2.so*
   fun:ibv_destroy_cq
}
{
   libmlx5 ibv_cmd_exp_reg_mr
   Memcheck:Param
   write(buf)
   ...
   fun:ibv_cmd_exp_reg_mr
   obj:*/libmlx5-rdmav2.so*
}
{
   libmlx5 ibv_exp_modify_qp
   Memcheck:Cond
   obj:*/libmlx5-rdmav2.so*
   obj:*/libibverbs.so*
   fun:ibv_exp_modify_qp
   ...
}
{
   libmlx5 ibv_destroy_qp
   Memcheck:Cond
   obj:*/libmlx5-rdmav2.so*
   fun:_ZN6qp_mgrD1Ev
}
{
   libmlx5 ibv_exp_cmd_create_cq
   Memcheck:Param
   write(buf)
   ...
   fun:ibv_exp_cmd_create_cq
   obj:*/libmlx5-rdmav2.so*
   fun:ibv_exp_create_cq
}
{
   libmlx5 ibv_create_ah
   Memcheck:Cond
   ...
   fun:ibv_create_ah
}
{
   libmlx5 ibv_create_ah
   Memcheck:Value8
   obj:*/libmlx5-rdmav2.so*
   fun:ibv_create_ah
}
{
   libmlx5 ibv_create_ah
   Memcheck:Value8
   ...
   obj:*/libmlx5-rdmav2.so*
   fun:ibv_create_ah
}
# issues to fix
{
   RM #1072426
   Memcheck:Leak
   match-leak-kinds: definite
   ...
   fun:_ZN20net_device_table_mgr16create_new_entryEj
   fun:_ZN15cache_table_mgrI10ip_addressP14net_device_valE17register_observerES0_PK14cache_observerPP19cache_entry_subjectIS0_S2_E
   fun:_ZN11route_entry22register_to_net_deviceEv
   fun:_ZN15route_table_mgr12update_entryEP11route_entryb
   fun:_ZN15route_table_mgr16create_new_entryE20route_rule_table_keyPK8observer
   fun:_ZN15route_table_mgrC1Ev
   fun:do_global_ctors_helper
}
{
   RM #1072427
   Memcheck:Leak
   match-leak-kinds: definite
   fun:_Znwm
   fun:_ZN13fd_collection17add_cq_channel_fdEiP4ring
   fun:_ZN11ring_simple16create_resourcesEP29ring_resource_creation_info_tb
   fun:ring_eth
   fun:_ZN18net_device_val_eth11create_ringEP21ring_alloc_logic_attr
   fun:_ZN14net_device_val12reserve_ringEP21ring_alloc_logic_attr
   fun:_ZN9dst_entry12resolve_ringEv
   fun:_ZN9dst_entry15prepare_to_sendEibb
   fun:_ZN12sockinfo_tcp7connectEPK8sockaddrj
}
{
   RM #1073005
   Memcheck:Leak
   match-leak-kinds: definite
   fun:_Znwm
   fun:do_global_ctors_helper
   fun:_Z15do_global_ctorsv
   fun:_Z15socket_internaliiib
}
{
   RM #1072998
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:_ZN21event_handler_manager20register_timer_eventEiP13timer_handler16timer_req_type_tPvP12timers_group
   fun:_ZN12sockinfo_tcp14register_timerEv
   fun:_ZN12sockinfo_tcp7connectEPK8sockaddrj
}

# libnl1
{
   ibnl
   Memcheck:Leak
   match-leak-kinds: possible
   ...
   obj:*libnl.so*
   fun:nl_cache_parse
}
{
   ibnl leak
   Memcheck:Leak
   match-leak-kinds: definite
   fun:realloc
   fun:__vasprintf_chk
   fun:__asprintf_chk
   ...
   fun:nl_cache_pickup
}